/**
 * 房产计算器 JavaScript - 优化版
 * 提供贷款计算、税费计算、购房能力评估、投资回报率计算
 */

class PropertyCalculator {
    constructor() {
        this.init();
    }
    
    init() {
        console.log('[PropertyCalculator] 房产计算器初始化');
        // 初始化默认显示贷款计算器
        this.showCalculator('loan');
        // 绑定事件监听
        this.bindEvents();
    }
    
    /**
     * 绑定事件监听
     */
    bindEvents() {
        // 绑定计算器切换事件
        document.querySelectorAll('.calc-tab').forEach(tab => {
            tab.addEventListener('click', (e) => {
                const type = e.currentTarget.getAttribute('data-type');
                this.switchCalculator(type);
            });
        });
        
        // 绑定计算按钮事件
        const loanCalcBtn = document.getElementById('calculate-loan');
        if (loanCalcBtn) {
            loanCalcBtn.addEventListener('click', () => this.calculateLoan());
        }
        
        const taxCalcBtn = document.getElementById('calculate-tax');
        if (taxCalcBtn) {
            taxCalcBtn.addEventListener('click', () => this.calculateTax());
        }
        
        const affordCalcBtn = document.getElementById('calculate-afford');
        if (affordCalcBtn) {
            affordCalcBtn.addEventListener('click', () => this.calculateAfford());
        }
        
        const roiCalcBtn = document.getElementById('calculate-roi');
        if (roiCalcBtn) {
            roiCalcBtn.addEventListener('click', () => this.calculateROI());
        }
    }
    
    /**
     * 显示指定计算器
     */
    showCalculator(type) {
        // 隐藏所有计算器
        document.querySelectorAll('.calculator-panel').forEach(panel => {
            panel.style.display = 'none';
        });
        
        // 移除所有标签的active状态
        document.querySelectorAll('.calc-tab').forEach(tab => {
            tab.classList.remove('active');
        });
        
        // 显示选中的计算器
        const targetPanel = document.getElementById(type + '-calculator');
        const targetTab = document.querySelector(`.calc-tab[data-type="${type}"]`);
        
        if (targetPanel) {
            targetPanel.style.display = 'block';
        }
        
        if (targetTab) {
            targetTab.classList.add('active');
        }
    }
    
    /**
     * 切换计算器
     */
    switchCalculator(type) {
        this.showCalculator(type);
    }
    
    /**
     * 贷款计算器
     */
    calculateLoan() {
        try {
            const housePrice = parseFloat(document.getElementById('housePrice').value) * 10000; // 转换为元
            const downPaymentRate = parseFloat(document.getElementById('downPaymentRate').value) / 100;
            const loanTerm = parseInt(document.getElementById('loanTerm').value);
            const interestRate = parseFloat(document.getElementById('interestRate').value) / 100;
            
            // 计算贷款金额
            const loanAmount = housePrice * (1 - downPaymentRate);
            
            // 计算月利率
            const monthlyRate = interestRate / 12;
            
            // 计算还款月数
            const months = loanTerm * 12;
            
            // 计算每月还款额 (等额本息)
            const monthlyPayment = loanAmount * monthlyRate * Math.pow(1 + monthlyRate, months) / (Math.pow(1 + monthlyRate, months) - 1);
            
            // 计算总还款额
            const totalPayment = monthlyPayment * months;
            
            // 计算总利息
            const totalInterest = totalPayment - loanAmount;
            
            // 显示结果
            document.getElementById('monthlyPayment').textContent = monthlyPayment.toFixed(2) + ' 元';
            document.getElementById('totalPayment').textContent = totalPayment.toFixed(2) + ' 元';
            document.getElementById('totalInterest').textContent = totalInterest.toFixed(2) + ' 元';
            document.getElementById('downPaymentAmount').textContent = (housePrice * downPaymentRate).toFixed(2) + ' 元';
            
            // 生成还款计划表
            this.generateRepaymentSchedule(loanAmount, monthlyRate, months);
            
            // 生成饼图
            this.generatePieChart(loanAmount, totalInterest);
            
        } catch (error) {
            console.error('贷款计算错误:', error);
            alert('请输入有效的数值');
        }
    }
    
    /**
     * 生成还款计划表
     */
    generateRepaymentSchedule(loanAmount, monthlyRate, months) {
        const scheduleTable = document.getElementById('repaymentSchedule');
        if (!scheduleTable) return;
        
        // 清空表格内容
        scheduleTable.innerHTML = `
            <tr>
                <th>期数</th>
                <th>月供</th>
                <th>本金</th>
                <th>利息</th>
                <th>剩余本金</th>
            </tr>
        `;
        
        let remainingPrincipal = loanAmount;
        const monthlyPayment = loanAmount * monthlyRate * Math.pow(1 + monthlyRate, months) / (Math.pow(1 + monthlyRate, months) - 1);
        
        // 只显示前12期、中间12期和最后12期
        for (let i = 1; i <= months; i++) {
            // 计算当月利息
            const interest = remainingPrincipal * monthlyRate;
            
            // 计算当月本金
            const principal = monthlyPayment - interest;
            
            // 更新剩余本金
            remainingPrincipal -= principal;
            
            // 只显示特定期数
            if (i <= 12 || (i > months - 12 && i <= months) || (i > Math.floor(months/2) - 6 && i <= Math.floor(months/2) + 6)) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${i}</td>
                    <td>${monthlyPayment.toFixed(2)}</td>
                    <td>${principal.toFixed(2)}</td>
                    <td>${interest.toFixed(2)}</td>
                    <td>${Math.max(0, remainingPrincipal).toFixed(2)}</td>
                `;
                scheduleTable.appendChild(row);
            } else if (i === 13 || i === Math.floor(months/2) + 7) {
                // 添加省略行
                const row = document.createElement('tr');
                row.innerHTML = `<td colspan="5" class="text-center">...</td>`;
                scheduleTable.appendChild(row);
            }
        }
    }
    
    /**
     * 生成饼图
     */
    generatePieChart(principal, interest) {
        const ctx = document.getElementById('loanChart');
        if (!ctx) return;
        
        // 清除旧图表
        if (window.loanPieChart) {
            window.loanPieChart.destroy();
        }
        
        // 创建新图表
        window.loanPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['本金', '利息'],
                datasets: [{
                    data: [principal, interest],
                    backgroundColor: ['#4e73df', '#e74a3b']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${value.toFixed(2)} 元 (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }
    
    /**
     * 税费计算器
     */
    calculateTax() {
        try {
            const propertyPrice = parseFloat(document.getElementById('propertyPrice').value) * 10000; // 转换为元
            const propertyArea = parseFloat(document.getElementById('propertyArea').value);
            const isFirstHome = document.getElementById('isFirstHome').checked;
            const propertyAge = parseInt(document.getElementById('propertyAge').value);
            
            // 计算契税
            let deedTaxRate;
            if (isFirstHome) {
                if (propertyArea <= 90) {
                    deedTaxRate = 0.01; // 首套90平米以下1%
                } else {
                    deedTaxRate = 0.015; // 首套90-144平米1.5%
                }
            } else {
                deedTaxRate = 0.03; // 非首套3%
            }
            const deedTax = propertyPrice * deedTaxRate;
            
            // 计算增值税和附加税(如果房龄小于2年)
            let vatTax = 0;
            let additionalTax = 0;
            if (propertyAge < 2) {
                vatTax = propertyPrice * 0.056; // 增值税5.6%
                additionalTax = vatTax * 0.12; // 附加税12%
            }
            
            // 计算个人所得税
            const incomeTax = propertyPrice * 0.01; // 假设1%
            
            // 其他费用
            const otherFees = 5000; // 固定费用，包括登记费、公证费等
            
            // 总费用
            const totalTax = deedTax + vatTax + additionalTax + incomeTax + otherFees;
            
            // 显示结果
            document.getElementById('deedTax').textContent = deedTax.toFixed(2) + ' 元';
            document.getElementById('vatTax').textContent = vatTax.toFixed(2) + ' 元';
            document.getElementById('additionalTax').textContent = additionalTax.toFixed(2) + ' 元';
            document.getElementById('incomeTax').textContent = incomeTax.toFixed(2) + ' 元';
            document.getElementById('otherFees').textContent = otherFees.toFixed(2) + ' 元';
            document.getElementById('totalTax').textContent = totalTax.toFixed(2) + ' 元';
            
            // 生成饼图
            this.generateTaxPieChart(deedTax, vatTax, additionalTax, incomeTax, otherFees);
            
        } catch (error) {
            console.error('税费计算错误:', error);
            alert('请输入有效的数值');
        }
    }
    
    /**
     * 生成税费饼图
     */
    generateTaxPieChart(deedTax, vatTax, additionalTax, incomeTax, otherFees) {
        const ctx = document.getElementById('taxChart');
        if (!ctx) return;
        
        // 清除旧图表
        if (window.taxPieChart) {
            window.taxPieChart.destroy();
        }
        
        // 创建新图表
        window.taxPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['契税', '增值税', '附加税', '个人所得税', '其他费用'],
                datasets: [{
                    data: [deedTax, vatTax, additionalTax, incomeTax, otherFees],
                    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${value.toFixed(2)} 元 (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }
    
    /**
     * 购房能力评估
     */
    calculateAfford() {
        try {
            const monthlyIncome = parseFloat(document.getElementById('monthlyIncome').value);
            const monthlyExpenses = parseFloat(document.getElementById('monthlyExpenses').value);
            const savings = parseFloat(document.getElementById('savings').value) * 10000; // 转换为元
            const otherAssets = parseFloat(document.getElementById('otherAssets').value) * 10000; // 转换为元
            const existingDebt = parseFloat(document.getElementById('existingDebt').value) * 10000; // 转换为元
            const loanTermYears = parseInt(document.getElementById('affordLoanTerm').value);
            const interestRateAfford = parseFloat(document.getElementById('interestRateAfford').value) / 100;
            
            // 计算月可支配收入
            const disposableIncome = monthlyIncome - monthlyExpenses;
            
            // 计算可用于月供的金额（假设不超过可支配收入的50%）
            const maxMonthlyPayment = disposableIncome * 0.5;
            
            // 计算月利率
            const monthlyRate = interestRateAfford / 12;
            
            // 计算还款月数
            const months = loanTermYears * 12;
            
            // 根据月供能力计算最大贷款额
            const maxLoanAmount = maxMonthlyPayment * ((Math.pow(1 + monthlyRate, months) - 1) / (monthlyRate * Math.pow(1 + monthlyRate, months)));
            
            // 计算可用于首付的资金（储蓄+其他资产-债务）
            const availableForDownPayment = savings + otherAssets - existingDebt;
            
            // 假设首付比例为30%
            const downPaymentRate = 0.3;
            
            // 计算最大购房能力
            const maxPropertyValue = maxLoanAmount / (1 - downPaymentRate) + availableForDownPayment;
            
            // 显示结果
            document.getElementById('disposableIncome').textContent = disposableIncome.toFixed(2) + ' 元/月';
            document.getElementById('maxMonthlyPayment').textContent = maxMonthlyPayment.toFixed(2) + ' 元/月';
            document.getElementById('maxLoanAmount').textContent = (maxLoanAmount / 10000).toFixed(2) + ' 万元';
            document.getElementById('availableForDownPayment').textContent = (availableForDownPayment / 10000).toFixed(2) + ' 万元';
            document.getElementById('maxPropertyValue').textContent = (maxPropertyValue / 10000).toFixed(2) + ' 万元';
            
            // 生成图表
            this.generateAffordChart(maxLoanAmount, availableForDownPayment);
            
        } catch (error) {
            console.error('购房能力评估错误:', error);
            alert('请输入有效的数值');
        }
    }
    
    /**
     * 生成购房能力图表
     */
    generateAffordChart(loanAmount, downPayment) {
        const ctx = document.getElementById('affordChart');
        if (!ctx) return;
        
        // 清除旧图表
        if (window.affordPieChart) {
            window.affordPieChart.destroy();
        }
        
        // 创建新图表
        window.affordPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['贷款金额', '首付金额'],
                datasets: [{
                    data: [loanAmount, downPayment],
                    backgroundColor: ['#4e73df', '#1cc88a']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${(value/10000).toFixed(2)} 万元 (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }
    
    /**
     * 投资回报率计算
     */
    calculateROI() {
        try {
            const investmentAmount = parseFloat(document.getElementById('investmentAmount').value) * 10000; // 转换为元
            const annualRentalIncome = parseFloat(document.getElementById('annualRentalIncome').value) * 10000; // 转换为元
            const annualExpenses = parseFloat(document.getElementById('annualExpenses').value) * 10000; // 转换为元
            const annualAppreciation = parseFloat(document.getElementById('annualAppreciation').value) / 100;
            const investmentPeriod = parseInt(document.getElementById('investmentPeriod').value);
            
            // 计算年净租金收入
            const annualNetRental = annualRentalIncome - annualExpenses;
            
            // 计算租金回报率
            const rentalYield = annualNetRental / investmentAmount * 100;
            
            // 计算投资期末房产价值
            const finalPropertyValue = investmentAmount * Math.pow(1 + annualAppreciation, investmentPeriod);
            
            // 计算增值收益
            const appreciationProfit = finalPropertyValue - investmentAmount;
            
            // 计算总租金收入
            const totalRentalIncome = annualNetRental * investmentPeriod;
            
            // 计算总投资回报
            const totalReturn = appreciationProfit + totalRentalIncome;
            
            // 计算总投资回报率
            const totalROI = totalReturn / investmentAmount * 100;
            
            // 计算年化回报率
            const annualizedROI = Math.pow(1 + totalROI/100, 1/investmentPeriod) - 1;
            
            // 显示结果
            document.getElementById('rentalYield').textContent = rentalYield.toFixed(2) + '%';
            document.getElementById('finalPropertyValue').textContent = (finalPropertyValue / 10000).toFixed(2) + ' 万元';
            document.getElementById('appreciationProfit').textContent = (appreciationProfit / 10000).toFixed(2) + ' 万元';
            document.getElementById('totalRentalIncome').textContent = (totalRentalIncome / 10000).toFixed(2) + ' 万元';
            document.getElementById('totalReturn').textContent = (totalReturn / 10000).toFixed(2) + ' 万元';
            document.getElementById('totalROI').textContent = totalROI.toFixed(2) + '%';
            document.getElementById('annualizedROI').textContent = (annualizedROI * 100).toFixed(2) + '%';
            
            // 生成图表
            this.generateROIChart(appreciationProfit, totalRentalIncome);
            
        } catch (error) {
            console.error('投资回报率计算错误:', error);
            alert('请输入有效的数值');
        }
    }
    
    /**
     * 生成投资回报率图表
     */
    generateROIChart(appreciationProfit, rentalIncome) {
        const ctx = document.getElementById('roiChart');
        if (!ctx) return;
        
        // 清除旧图表
        if (window.roiPieChart) {
            window.roiPieChart.destroy();
        }
        
        // 创建新图表
        window.roiPieChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['房产增值收益', '租金收益'],
                datasets: [{
                    data: [appreciationProfit, rentalIncome],
                    backgroundColor: ['#4e73df', '#1cc88a']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.raw;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((value / total) * 100);
                                return `${label}: ${(value/10000).toFixed(2)} 万元 (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }
}

// 初始化计算器
document.addEventListener('DOMContentLoaded', function() {
    window.propertyCalculator = new PropertyCalculator();
});